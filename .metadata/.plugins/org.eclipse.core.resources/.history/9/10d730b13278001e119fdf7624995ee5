package frontend.utils;

import java.io.File;
import java.io.IOException;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.font.PDType1Font;

import backend.dto.ItemDTO;
import javafx.collections.ObservableList;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.stage.FileChooser;

public class ExportPDF {
	
	public static void exportToPDF(TableView<ItemDTO> table) {
		PDDocument document = new PDDocument();
		PDPage page = new PDPage(PDRectangle.A4);
		document.addPage(page);
		try {
			PDPageContentStream contentStream = new PDPageContentStream(document, page);
			float margin = 50;
			float yStart = page.getMediaBox().getHeight() - margin;
			float tableWidth = page.getMediaBox().getWidth() - 2 * margin;
			float yPosition = yStart;
			int rows = table.getItems().size();
			int cols = table.getColumns().size();
			float rowHeight = 20f;
			float tableHeight = rowHeight * rows;
			float tableYBottom = yStart - tableHeight;

			// Cabe√ßalho da tabela
			float tableYPosition = yStart;
			for (TableColumn<?, ?> column : table.getColumns()) {
				float width = tableWidth / (float) cols;
				contentStream.setFont(PDType1Font.HELVETICA_BOLD, 12);
				contentStream.beginText();
				contentStream.newLineAtOffset(margin, tableYPosition);
				contentStream.showText(column.getText());
				contentStream.endText();
				tableYPosition -= rowHeight;
			}

			// Dados da tabela
			for (int i = 0; i < rows; i++) {
				tableYPosition = yStart - (i * rowHeight);
				ObservableList<TableColumn<ItemDTO, ?>> columns = table.getColumns();
				for (int j = 0; j < cols; j++) {
					TableColumn<?, ?> column = columns.get(j);
					float width = tableWidth / (float) cols;
					contentStream.setFont(PDType1Font.HELVETICA, 12);
					contentStream.beginText();
					contentStream.newLineAtOffset(margin + j * width, tableYPosition);
					contentStream.showText(column.getCellData(i).toString());
					contentStream.endText();
				}
			}

			contentStream.close();

			// Salve o documento em um arquivo
			FileChooser fileChooser = new FileChooser();
			fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter("PDF Files", "*.pdf"));
			File file = fileChooser.showSaveDialog(LoadScene.getStage());

			if (file != null) {
				document.save(file);
				document.close();
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
