package frontend.controllers;

import java.io.IOException;
import java.net.URL;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Optional;
import java.util.ResourceBundle;

import backend.controllers.VendaShopeeController;
import backend.entities.mercadoLivreEntity.VendaMercadoLivreEntity;
import backend.entities.shopeeEntity.VendaShopeeFormatadaEntity;
import frontend.utils.Constants;
import frontend.utils.DataUtils;
import frontend.views.utils.Alerts;
import frontend.views.utils.Constraints;
import javafx.collections.FXCollections;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Scene;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import javafx.scene.layout.Pane;
import javafx.stage.Modality;
import javafx.stage.Stage;

public class ViewVendasController implements Initializable {

	VendaShopeeController shopeeController = new VendaShopeeController();

	@FXML
	private Button btnBuscar;

	@FXML
	private Button btnExportar;

	@FXML
	private Button btnInserir;

	@FXML
	private Button btnLimpar;

	@FXML
	private Button btnProdutos;

	@FXML
	private Button btnRelatorios;

	@FXML
	private Button btnVendas;

	@FXML
	private ComboBox<String> cbCanal;

	@FXML
	private ComboBox<String> cbContaAnuncio;

	@FXML
	private TableView<?> tbGeral;	
	@FXML
	private TableColumn<?, ?> columnDataTbGeral;
	@FXML
	private TableColumn<?, ?> columnQtdTbGeral;
	@FXML
	private TableColumn<?, ?> columnItemTbGeral;
	@FXML
	private TableColumn<?, ?> columnClienteTbGeral;
	@FXML
	private TableColumn<?, ?> columnUnitTbGeral;
	@FXML
	private TableColumn<?, ?> columnTotalTbGeral;
	@FXML
	private TableColumn<?, ?> columnRecebidoTbGeral;
	@FXML
	private TableColumn<?, ?> columnStatusTbGeral;
	@FXML
	private TableColumn<?, ?> columnCanalTbGeral;

	@FXML
	private TableView<VendaMercadoLivreEntity> tbMercadoLivre;
	@FXML
	private TableColumn<VendaMercadoLivreEntity, LocalDate> columnDataTbMercadoLivre;
	@FXML
	private TableColumn<VendaMercadoLivreEntity, String> columnAnuncioTbMercadoLivre;
	@FXML
	private TableColumn<VendaMercadoLivreEntity, Integer> columnQtdTbMercadoLivre;
	@FXML
	private TableColumn<VendaMercadoLivreEntity, String> columnItemTbMercadoLivre;
	@FXML
	private TableColumn<VendaMercadoLivreEntity, String> columnClienteTbMercadoLivre;
	@FXML
	private TableColumn<VendaMercadoLivreEntity, Double> columnUnitTbMercadoLivre;
	@FXML
	private TableColumn<VendaMercadoLivreEntity, Double> columnTotalTbMercadoLivre;
	@FXML
	private TableColumn<VendaMercadoLivreEntity, Double> columnRecebidoTbMercadoLivre;
	@FXML
	private TableColumn<VendaMercadoLivreEntity, String> columnStatusTbMercadoLivre;

	@FXML
	private TableView<VendaShopeeFormatadaEntity> tbShopee;
	@FXML
	private TableColumn<VendaShopeeFormatadaEntity, String> columnDataTbShopee;
	@FXML
	private TableColumn<VendaShopeeFormatadaEntity, String> columnContaTbShopee;
	@FXML
	private TableColumn<VendaShopeeFormatadaEntity, Number> columnQtdTbShopee;
	@FXML
	private TableColumn<VendaShopeeFormatadaEntity, String> columnItemTbShopee;
	@FXML
	private TableColumn<VendaShopeeFormatadaEntity, String> columnClienteTbShopee;
	@FXML
	private TableColumn<VendaShopeeFormatadaEntity, Number> columnUnitTbShopee;
	@FXML
	private TableColumn<VendaShopeeFormatadaEntity, Number> columnTotalTbShopee;
	@FXML
	private TableColumn<VendaShopeeFormatadaEntity, Number> columnRecebidoTbShopee;
	@FXML
	private TableColumn<VendaShopeeFormatadaEntity, String> columnStatusTbShopee;

	@FXML
	private TextField txtCliente;

	@FXML
	private TextField txtCodItem;

	@FXML
	private TextField txtDataFim;

	@FXML
	private TextField txtDataInicio;

	@FXML
	private TextField txtQtde;

	@FXML
	private ComboBox<String> cbStatus;
	
	@Override
	public void initialize(URL url, ResourceBundle rb) {
		setNumberFields();
		setItensComboBox();
	}

	@FXML
	void onCanalAction() {
		List<String> options;
		if (cbCanal.getSelectionModel().getSelectedItem().equals(Constants.LOJA.SHOPEE)) {
			cbContaAnuncio.setPromptText(Constants.CONTA_ANUNCIO.CONTA);
			options = Arrays.asList("", Constants.CONTA_ANUNCIO.PRINCIPAL, Constants.CONTA_ANUNCIO.SECUNDARIA);
			cbContaAnuncio.setItems(FXCollections.observableArrayList(options));
		} else if (cbCanal.getSelectionModel().getSelectedItem().equals(Constants.LOJA.MERCADO_LIVRE)) {
			cbContaAnuncio.setPromptText(Constants.CONTA_ANUNCIO.TIPO_ANUNCIO);
			options = Arrays.asList("", Constants.CONTA_ANUNCIO.CLASSICO, Constants.CONTA_ANUNCIO.CLASSICO_FG,
					Constants.CONTA_ANUNCIO.PREMIUM, Constants.CONTA_ANUNCIO.PREMIUM_FG);
			cbContaAnuncio.setItems(FXCollections.observableArrayList(options));
		} else {
			cbContaAnuncio.setPromptText("-");
			cbContaAnuncio.setItems(null);
		}
	}

	@FXML
	void onDataInicioReleased(KeyEvent event) {
		formataData(txtDataInicio, event);
	}

	@FXML
	void onDataFimReleased(KeyEvent event) {
		formataData(txtDataFim, event);
	}

	private void formataData(TextField textField, KeyEvent event) {
		String text = textField.getText();
		
		if (text.contains("//"))
			textField.setText(text.replace("//", "/"));

		if (event.getCode() != KeyCode.BACK_SPACE) {
			textField.setText(DataUtils.addBarraData(text));
			if (text.length() == 3) {
				String formattedDate = new StringBuilder(text.substring(0, 2)).append("/").append(text.substring(2))
						.toString();
				txtDataInicio.setText(formattedDate);
			}
			if (text.length() == 6) {
				String formattedDate = new StringBuilder(text.substring(0, 5)).append("/").append(text.substring(5))
						.toString();
				textField.setText(formattedDate);
			}
			textField.positionCaret(textField.getLength());
		}
	}

	@FXML
	void onInserirAction(ActionEvent event) {
		callModalInserirVenda(Constraints.currentStage(event));
	}

	private void callModalInserirVenda(Stage parentStage) {
		try {
			FXMLLoader loader = new FXMLLoader(getClass().getResource(Constants.MODAL.INSERIR_VENDA));
			Pane pane = loader.load();
			Stage modalStage = new Stage();
			modalStage.setTitle("Inserir venda");
			modalStage.setScene(new Scene(pane));
			modalStage.setResizable(false);
			modalStage.initOwner(parentStage);
			modalStage.initModality(Modality.WINDOW_MODAL);
			modalStage.showAndWait();
		} catch (IOException e) {
			Alerts.showAlert("IO Exception", "ERROR", e.getMessage(), AlertType.ERROR);
		}
	}
	
	@FXML
	void onBuscarAction() {
		Integer canal = cbCanal.getSelectionModel().getSelectedIndex();
		Date dataInicio = Optional.ofNullable(DataUtils.stringToDate(txtDataInicio.getText())).orElse(null);
		Date dataFim = Optional.ofNullable(DataUtils.stringToDate(txtDataFim.getText())).orElse(null);
		Integer contaAnuncio = cbContaAnuncio.getSelectionModel().getSelectedIndex();
		Integer qtde = Integer.valueOf(txtQtde.getText());
		String codItem = txtCodItem.getText();
		String cliente = txtCliente.getText();
		Integer status = cbStatus.getSelectionModel().getSelectedIndex();
		List<Object> list = Arrays.asList(canal, dataInicio, dataFim, contaAnuncio, qtde, codItem, cliente, status);
		
		System.out.println("Date  "+dataFim);
		System.out.println("Integer  "+qtde);
		System.out.println("String  "+cliente);
		
//		montaTabelaShopee();
	}
	
	private void montaTabelaShopee(List<VendaShopeeFormatadaEntity> vendas) {
		columnDataTbShopee.setCellValueFactory(new PropertyValueFactory<>("data"));		
		columnContaTbShopee.setCellValueFactory(new PropertyValueFactory<>("conta"));
		columnClienteTbShopee.setCellValueFactory(new PropertyValueFactory<>("cliente"));
		columnQtdTbShopee.setCellValueFactory(new PropertyValueFactory<>("qtde"));
		columnItemTbShopee.setCellValueFactory(new PropertyValueFactory<>("codItem"));
		columnUnitTbShopee.setCellValueFactory(new PropertyValueFactory<>("valorUnitario"));
		columnTotalTbShopee.setCellValueFactory(new PropertyValueFactory<>("valorTotal"));
		columnRecebidoTbShopee.setCellValueFactory(new PropertyValueFactory<>("valorRecebido"));
		columnStatusTbShopee.setCellValueFactory(new PropertyValueFactory<>("status"));
		tbShopee.setVisible(true);
		tbGeral.setVisible(false);
		tbMercadoLivre.setVisible(false);
		
		tbShopee.setItems(FXCollections.observableArrayList(vendas));
	}
	
	@FXML
	void onLimparAction() {
		cbCanal.setValue("");
		cbCanal.setPromptText("Canal de Venda");
		txtDataInicio.setText("");
		txtDataFim.setText("");
		cbContaAnuncio.setValue("");
		txtQtde.setText("");
		txtCodItem.setText("");
		txtCliente.setText("");
		cbStatus.setValue("");
		cbStatus.setPromptText("Status");
	}
	
	private void setNumberFields() {
		Constraints.setTextFieldNumber(txtQtde);
		Constraints.setTextFieldNumberBar(txtDataInicio);
		Constraints.setTextFieldMaxLength(txtDataInicio, 10);
		Constraints.setTextFieldNumberBar(txtDataFim);
		Constraints.setTextFieldMaxLength(txtDataFim, 10);
	}
	
	private void setItensComboBox() {
		List<String> options = Arrays.asList(Constants.LOJA.SHOPEE, Constants.LOJA.MERCADO_LIVRE, Constants.LOJA.GERAL);
		cbCanal.setItems(FXCollections.observableArrayList(options));
		cbContaAnuncio.setPromptText(null);
		options = Arrays.asList("", Constants.STATUS.PENDENTE, Constants.STATUS.CONCLUIDO, Constants.STATUS.DEVOLUCAO,
				Constants.STATUS.CANCELADO);
		cbStatus.setItems(FXCollections.observableArrayList(options));
	}

}
